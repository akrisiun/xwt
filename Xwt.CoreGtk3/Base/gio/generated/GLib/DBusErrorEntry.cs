// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct DBusErrorEntry : IEquatable<DBusErrorEntry> {

		public int ErrorCode;
		public string DbusErrorName;

		public static GLib.DBusErrorEntry Zero = new GLib.DBusErrorEntry ();

		public static GLib.DBusErrorEntry New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return GLib.DBusErrorEntry.Zero;
			return (GLib.DBusErrorEntry) Marshal.PtrToStructure (raw, typeof (GLib.DBusErrorEntry));
		}

		public bool Equals (DBusErrorEntry other)
		{
			return true && ErrorCode.Equals (other.ErrorCode) && DbusErrorName.Equals (other.DbusErrorName);
		}

		public override bool Equals (object other)
		{
			return other is DBusErrorEntry && Equals ((DBusErrorEntry) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ ErrorCode.GetHashCode () ^ DbusErrorName.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
