// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class SocketControlMessage : GLib.Object {

		public SocketControlMessage (IntPtr raw) : base(raw) {}

		protected SocketControlMessage() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		static GetSizeNativeDelegate GetSize_cb_delegate;
		static GetSizeNativeDelegate GetSizeVMCallback {
			get {
				if (GetSize_cb_delegate == null)
					GetSize_cb_delegate = new GetSizeNativeDelegate (GetSize_cb);
				return GetSize_cb_delegate;
			}
		}

		static void OverrideGetSize (GLib.GType gtype)
		{
			OverrideGetSize (gtype, GetSizeVMCallback);
		}

		static void OverrideGetSize (GLib.GType gtype, GetSizeNativeDelegate callback)
		{
			GSocketControlMessageClass class_iface = GetClassStruct (gtype, false);
			class_iface.GetSize = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate UIntPtr GetSizeNativeDelegate (IntPtr inst);

		static UIntPtr GetSize_cb (IntPtr inst)
		{
			try {
				SocketControlMessage __obj = GLib.Object.GetObject (inst, false) as SocketControlMessage;
				ulong __result;
				__result = __obj.OnGetSize ();
				return new UIntPtr (__result);
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.SocketControlMessage), ConnectionMethod="OverrideGetSize")]
		protected virtual ulong OnGetSize ()
		{
			return InternalGetSize ();
		}

		private ulong InternalGetSize ()
		{
			GetSizeNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).GetSize;
			if (unmanaged == null) return 0;

			UIntPtr __result = unmanaged (this.Handle);
			return (ulong) __result;
		}

		static GetLevelNativeDelegate GetLevel_cb_delegate;
		static GetLevelNativeDelegate GetLevelVMCallback {
			get {
				if (GetLevel_cb_delegate == null)
					GetLevel_cb_delegate = new GetLevelNativeDelegate (GetLevel_cb);
				return GetLevel_cb_delegate;
			}
		}

		static void OverrideGetLevel (GLib.GType gtype)
		{
			OverrideGetLevel (gtype, GetLevelVMCallback);
		}

		static void OverrideGetLevel (GLib.GType gtype, GetLevelNativeDelegate callback)
		{
			GSocketControlMessageClass class_iface = GetClassStruct (gtype, false);
			class_iface.GetLevel = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate int GetLevelNativeDelegate (IntPtr inst);

		static int GetLevel_cb (IntPtr inst)
		{
			try {
				SocketControlMessage __obj = GLib.Object.GetObject (inst, false) as SocketControlMessage;
				int __result;
				__result = __obj.OnGetLevel ();
				return __result;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.SocketControlMessage), ConnectionMethod="OverrideGetLevel")]
		protected virtual int OnGetLevel ()
		{
			return InternalGetLevel ();
		}

		private int InternalGetLevel ()
		{
			GetLevelNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).GetLevel;
			if (unmanaged == null) return 0;

			int __result = unmanaged (this.Handle);
			return __result;
		}

		static GetTypeNativeDelegate GetType_cb_delegate;
		static GetTypeNativeDelegate GetTypeVMCallback {
			get {
				if (GetType_cb_delegate == null)
					GetType_cb_delegate = new GetTypeNativeDelegate (GetType_cb);
				return GetType_cb_delegate;
			}
		}

		static void OverrideGetType (GLib.GType gtype)
		{
			OverrideGetType (gtype, GetTypeVMCallback);
		}

		static void OverrideGetType (GLib.GType gtype, GetTypeNativeDelegate callback)
		{
			GSocketControlMessageClass class_iface = GetClassStruct (gtype, false);
			class_iface.GetType = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate int GetTypeNativeDelegate (IntPtr inst);

		static int GetType_cb (IntPtr inst)
		{
			try {
				SocketControlMessage __obj = GLib.Object.GetObject (inst, false) as SocketControlMessage;
				int __result;
				__result = __obj.OnGetType ();
				return __result;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.SocketControlMessage), ConnectionMethod="OverrideGetType")]
		protected virtual int OnGetType ()
		{
			return InternalGetType ();
		}

		private int InternalGetType ()
		{
			GetTypeNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).GetType;
			if (unmanaged == null) return 0;

			int __result = unmanaged (this.Handle);
			return __result;
		}

		static SerializeNativeDelegate Serialize_cb_delegate;
		static SerializeNativeDelegate SerializeVMCallback {
			get {
				if (Serialize_cb_delegate == null)
					Serialize_cb_delegate = new SerializeNativeDelegate (Serialize_cb);
				return Serialize_cb_delegate;
			}
		}

		static void OverrideSerialize (GLib.GType gtype)
		{
			OverrideSerialize (gtype, SerializeVMCallback);
		}

		static void OverrideSerialize (GLib.GType gtype, SerializeNativeDelegate callback)
		{
			GSocketControlMessageClass class_iface = GetClassStruct (gtype, false);
			class_iface.Serialize = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void SerializeNativeDelegate (IntPtr inst, IntPtr data);

		static void Serialize_cb (IntPtr inst, IntPtr data)
		{
			try {
				SocketControlMessage __obj = GLib.Object.GetObject (inst, false) as SocketControlMessage;
				__obj.OnSerialize (data);
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.SocketControlMessage), ConnectionMethod="OverrideSerialize")]
		protected virtual void OnSerialize (IntPtr data)
		{
			InternalSerialize (data);
		}

		private void InternalSerialize (IntPtr data)
		{
			SerializeNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).Serialize;
			if (unmanaged == null) return;

			unmanaged (this.Handle, data);
		}

		[StructLayout (LayoutKind.Sequential)]
		struct GSocketControlMessageClass {
			public GetSizeNativeDelegate GetSize;
			public GetLevelNativeDelegate GetLevel;
			public GetTypeNativeDelegate GetType;
			public SerializeNativeDelegate Serialize;
			IntPtr Deserialize;
			IntPtr GReserved1;
			IntPtr GReserved2;
			IntPtr GReserved3;
			IntPtr GReserved4;
			IntPtr GReserved5;
		}

		static uint class_offset = ((GLib.GType) typeof (GLib.Object)).GetClassSize ();
		static Dictionary<GLib.GType, GSocketControlMessageClass> class_structs;

		static GSocketControlMessageClass GetClassStruct (GLib.GType gtype, bool use_cache)
		{
			if (class_structs == null)
				class_structs = new Dictionary<GLib.GType, GSocketControlMessageClass> ();

			if (use_cache && class_structs.ContainsKey (gtype))
				return class_structs [gtype];
			else {
				IntPtr class_ptr = new IntPtr (gtype.GetClassPtr ().ToInt64 () + class_offset);
				GSocketControlMessageClass class_struct = (GSocketControlMessageClass) Marshal.PtrToStructure (class_ptr, typeof (GSocketControlMessageClass));
				if (use_cache)
					class_structs.Add (gtype, class_struct);
				return class_struct;
			}
		}

		static void OverrideClassStruct (GLib.GType gtype, GSocketControlMessageClass class_struct)
		{
			IntPtr class_ptr = new IntPtr (gtype.GetClassPtr ().ToInt64 () + class_offset);
			Marshal.StructureToPtr (class_struct, class_ptr, false);
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_socket_control_message_deserialize(int level, int type, UIntPtr size, IntPtr data);

		public static GLib.SocketControlMessage Deserialize(int level, int type, ulong size, IntPtr data) {
			IntPtr raw_ret = g_socket_control_message_deserialize(level, type, new UIntPtr (size), data);
			GLib.SocketControlMessage ret = GLib.Object.GetObject(raw_ret) as GLib.SocketControlMessage;
			return ret;
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int g_socket_control_message_get_level(IntPtr raw);

		public int Level { 
			get {
				int raw_ret = g_socket_control_message_get_level(Handle);
				int ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern int g_socket_control_message_get_msg_type(IntPtr raw);

		public int MsgType { 
			get {
				int raw_ret = g_socket_control_message_get_msg_type(Handle);
				int ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern UIntPtr g_socket_control_message_get_size(IntPtr raw);

		public ulong Size { 
			get {
				UIntPtr raw_ret = g_socket_control_message_get_size(Handle);
				ulong ret = (ulong) raw_ret;
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_socket_control_message_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = g_socket_control_message_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_socket_control_message_serialize(IntPtr raw, IntPtr data);

		public void Serialize(IntPtr data) {
			g_socket_control_message_serialize(Handle, data);
		}

#endregion
	}
}
