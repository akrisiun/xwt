// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class DBusAuthMechanism : GLib.Object {

		public DBusAuthMechanism (IntPtr raw) : base(raw) {}

		protected DBusAuthMechanism() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[GLib.Property ("stream")]
		public GLib.IOStream Stream {
			get {
				GLib.Value val = GetProperty ("stream");
				GLib.IOStream ret = (GLib.IOStream) val;
				val.Dispose ();
				return ret;
			}
		}

		[GLib.Property ("credentials")]
		public GLib.Credentials Credentials {
			get {
				GLib.Value val = GetProperty ("credentials");
				GLib.Credentials ret = (GLib.Credentials) val;
				val.Dispose ();
				return ret;
			}
		}

		static IsSupportedNativeDelegate IsSupported_cb_delegate;
		static IsSupportedNativeDelegate IsSupportedVMCallback {
			get {
				if (IsSupported_cb_delegate == null)
					IsSupported_cb_delegate = new IsSupportedNativeDelegate (IsSupported_cb);
				return IsSupported_cb_delegate;
			}
		}

		static void OverrideIsSupported (GLib.GType gtype)
		{
			OverrideIsSupported (gtype, IsSupportedVMCallback);
		}

		static void OverrideIsSupported (GLib.GType gtype, IsSupportedNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.IsSupported = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate bool IsSupportedNativeDelegate (IntPtr inst);

		static bool IsSupported_cb (IntPtr inst)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				bool __result;
				__result = __obj.OnIsSupported ();
				return __result;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideIsSupported")]
		protected virtual bool OnIsSupported ()
		{
			return InternalIsSupported ();
		}

		private bool InternalIsSupported ()
		{
			IsSupportedNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).IsSupported;
			if (unmanaged == null) return false;

			bool __result = unmanaged (this.Handle);
			return __result;
		}

		static EncodeDataNativeDelegate EncodeData_cb_delegate;
		static EncodeDataNativeDelegate EncodeDataVMCallback {
			get {
				if (EncodeData_cb_delegate == null)
					EncodeData_cb_delegate = new EncodeDataNativeDelegate (EncodeData_cb);
				return EncodeData_cb_delegate;
			}
		}

		static void OverrideEncodeData (GLib.GType gtype)
		{
			OverrideEncodeData (gtype, EncodeDataVMCallback);
		}

		static void OverrideEncodeData (GLib.GType gtype, EncodeDataNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.EncodeData = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr EncodeDataNativeDelegate (IntPtr inst, IntPtr data, UIntPtr data_len, out UIntPtr out_data_len);

		static IntPtr EncodeData_cb (IntPtr inst, IntPtr data, UIntPtr data_len, out UIntPtr out_data_len)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				string __result;
				ulong myout_data_len;
				__result = __obj.OnEncodeData (GLib.Marshaller.Utf8PtrToString (data), out myout_data_len);
				out_data_len = new UIntPtr (myout_data_len);
				return GLib.Marshaller.StringToPtrGStrdup(__result);
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideEncodeData")]
		protected virtual string OnEncodeData (string data, out ulong out_data_len)
		{
			return InternalEncodeData (data, out out_data_len);
		}

		private string InternalEncodeData (string data, out ulong out_data_len)
		{
			EncodeDataNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).EncodeData;
			if (unmanaged == null) throw new InvalidOperationException ("No base method to invoke");

			IntPtr native_data = GLib.Marshaller.StringToPtrGStrdup (data);
			UIntPtr native_out_data_len;
			IntPtr __result = unmanaged (this.Handle, native_data, new UIntPtr ((ulong) System.Text.Encoding.UTF8.GetByteCount (data)), out native_out_data_len);
			GLib.Marshaller.Free (native_data);
			out_data_len = (ulong) native_out_data_len;
			return GLib.Marshaller.PtrToStringGFree(__result);
		}

		static DecodeDataNativeDelegate DecodeData_cb_delegate;
		static DecodeDataNativeDelegate DecodeDataVMCallback {
			get {
				if (DecodeData_cb_delegate == null)
					DecodeData_cb_delegate = new DecodeDataNativeDelegate (DecodeData_cb);
				return DecodeData_cb_delegate;
			}
		}

		static void OverrideDecodeData (GLib.GType gtype)
		{
			OverrideDecodeData (gtype, DecodeDataVMCallback);
		}

		static void OverrideDecodeData (GLib.GType gtype, DecodeDataNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.DecodeData = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr DecodeDataNativeDelegate (IntPtr inst, IntPtr data, UIntPtr data_len, out UIntPtr out_data_len);

		static IntPtr DecodeData_cb (IntPtr inst, IntPtr data, UIntPtr data_len, out UIntPtr out_data_len)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				string __result;
				ulong myout_data_len;
				__result = __obj.OnDecodeData (GLib.Marshaller.Utf8PtrToString (data), out myout_data_len);
				out_data_len = new UIntPtr (myout_data_len);
				return GLib.Marshaller.StringToPtrGStrdup(__result);
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideDecodeData")]
		protected virtual string OnDecodeData (string data, out ulong out_data_len)
		{
			return InternalDecodeData (data, out out_data_len);
		}

		private string InternalDecodeData (string data, out ulong out_data_len)
		{
			DecodeDataNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).DecodeData;
			if (unmanaged == null) throw new InvalidOperationException ("No base method to invoke");

			IntPtr native_data = GLib.Marshaller.StringToPtrGStrdup (data);
			UIntPtr native_out_data_len;
			IntPtr __result = unmanaged (this.Handle, native_data, new UIntPtr ((ulong) System.Text.Encoding.UTF8.GetByteCount (data)), out native_out_data_len);
			GLib.Marshaller.Free (native_data);
			out_data_len = (ulong) native_out_data_len;
			return GLib.Marshaller.PtrToStringGFree(__result);
		}

		static ServerGetStateNativeDelegate ServerGetState_cb_delegate;
		static ServerGetStateNativeDelegate ServerGetStateVMCallback {
			get {
				if (ServerGetState_cb_delegate == null)
					ServerGetState_cb_delegate = new ServerGetStateNativeDelegate (ServerGetState_cb);
				return ServerGetState_cb_delegate;
			}
		}

		static void OverrideServerGetState (GLib.GType gtype)
		{
			OverrideServerGetState (gtype, ServerGetStateVMCallback);
		}

		static void OverrideServerGetState (GLib.GType gtype, ServerGetStateNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ServerGetState = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate int ServerGetStateNativeDelegate (IntPtr inst);

		static int ServerGetState_cb (IntPtr inst)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				GLib.DBusAuthMechanismState __result;
				__result = __obj.OnServerGetState ();
				return (int) __result;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideServerGetState")]
		protected virtual GLib.DBusAuthMechanismState OnServerGetState ()
		{
			return InternalServerGetState ();
		}

		private GLib.DBusAuthMechanismState InternalServerGetState ()
		{
			ServerGetStateNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ServerGetState;
			if (unmanaged == null) return (GLib.DBusAuthMechanismState) 0;

			int __result = unmanaged (this.Handle);
			return (GLib.DBusAuthMechanismState) __result;
		}

		static ServerInitiateNativeDelegate ServerInitiate_cb_delegate;
		static ServerInitiateNativeDelegate ServerInitiateVMCallback {
			get {
				if (ServerInitiate_cb_delegate == null)
					ServerInitiate_cb_delegate = new ServerInitiateNativeDelegate (ServerInitiate_cb);
				return ServerInitiate_cb_delegate;
			}
		}

		static void OverrideServerInitiate (GLib.GType gtype)
		{
			OverrideServerInitiate (gtype, ServerInitiateVMCallback);
		}

		static void OverrideServerInitiate (GLib.GType gtype, ServerInitiateNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ServerInitiate = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void ServerInitiateNativeDelegate (IntPtr inst, IntPtr initial_response, UIntPtr initial_response_len);

		static void ServerInitiate_cb (IntPtr inst, IntPtr initial_response, UIntPtr initial_response_len)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				__obj.OnServerInitiate (GLib.Marshaller.Utf8PtrToString (initial_response));
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideServerInitiate")]
		protected virtual void OnServerInitiate (string initial_response)
		{
			InternalServerInitiate (initial_response);
		}

		private void InternalServerInitiate (string initial_response)
		{
			ServerInitiateNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ServerInitiate;
			if (unmanaged == null) return;

			IntPtr native_initial_response = GLib.Marshaller.StringToPtrGStrdup (initial_response);
			unmanaged (this.Handle, native_initial_response, new UIntPtr ((ulong) System.Text.Encoding.UTF8.GetByteCount (initial_response)));
			GLib.Marshaller.Free (native_initial_response);
		}

		static ServerDataReceiveNativeDelegate ServerDataReceive_cb_delegate;
		static ServerDataReceiveNativeDelegate ServerDataReceiveVMCallback {
			get {
				if (ServerDataReceive_cb_delegate == null)
					ServerDataReceive_cb_delegate = new ServerDataReceiveNativeDelegate (ServerDataReceive_cb);
				return ServerDataReceive_cb_delegate;
			}
		}

		static void OverrideServerDataReceive (GLib.GType gtype)
		{
			OverrideServerDataReceive (gtype, ServerDataReceiveVMCallback);
		}

		static void OverrideServerDataReceive (GLib.GType gtype, ServerDataReceiveNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ServerDataReceive = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void ServerDataReceiveNativeDelegate (IntPtr inst, IntPtr data, UIntPtr data_len);

		static void ServerDataReceive_cb (IntPtr inst, IntPtr data, UIntPtr data_len)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				__obj.OnServerDataReceive (GLib.Marshaller.Utf8PtrToString (data));
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideServerDataReceive")]
		protected virtual void OnServerDataReceive (string data)
		{
			InternalServerDataReceive (data);
		}

		private void InternalServerDataReceive (string data)
		{
			ServerDataReceiveNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ServerDataReceive;
			if (unmanaged == null) return;

			IntPtr native_data = GLib.Marshaller.StringToPtrGStrdup (data);
			unmanaged (this.Handle, native_data, new UIntPtr ((ulong) System.Text.Encoding.UTF8.GetByteCount (data)));
			GLib.Marshaller.Free (native_data);
		}

		static ServerDataSendNativeDelegate ServerDataSend_cb_delegate;
		static ServerDataSendNativeDelegate ServerDataSendVMCallback {
			get {
				if (ServerDataSend_cb_delegate == null)
					ServerDataSend_cb_delegate = new ServerDataSendNativeDelegate (ServerDataSend_cb);
				return ServerDataSend_cb_delegate;
			}
		}

		static void OverrideServerDataSend (GLib.GType gtype)
		{
			OverrideServerDataSend (gtype, ServerDataSendVMCallback);
		}

		static void OverrideServerDataSend (GLib.GType gtype, ServerDataSendNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ServerDataSend = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr ServerDataSendNativeDelegate (IntPtr inst, out UIntPtr out_data_len);

		static IntPtr ServerDataSend_cb (IntPtr inst, out UIntPtr out_data_len)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				string __result;
				ulong myout_data_len;
				__result = __obj.OnServerDataSend (out myout_data_len);
				out_data_len = new UIntPtr (myout_data_len);
				return GLib.Marshaller.StringToPtrGStrdup(__result);
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideServerDataSend")]
		protected virtual string OnServerDataSend (out ulong out_data_len)
		{
			return InternalServerDataSend (out out_data_len);
		}

		private string InternalServerDataSend (out ulong out_data_len)
		{
			ServerDataSendNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ServerDataSend;
			if (unmanaged == null) throw new InvalidOperationException ("No base method to invoke");

			UIntPtr native_out_data_len;
			IntPtr __result = unmanaged (this.Handle, out native_out_data_len);
			out_data_len = (ulong) native_out_data_len;
			return GLib.Marshaller.PtrToStringGFree(__result);
		}

		static ServerGetRejectReasonNativeDelegate ServerGetRejectReason_cb_delegate;
		static ServerGetRejectReasonNativeDelegate ServerGetRejectReasonVMCallback {
			get {
				if (ServerGetRejectReason_cb_delegate == null)
					ServerGetRejectReason_cb_delegate = new ServerGetRejectReasonNativeDelegate (ServerGetRejectReason_cb);
				return ServerGetRejectReason_cb_delegate;
			}
		}

		static void OverrideServerGetRejectReason (GLib.GType gtype)
		{
			OverrideServerGetRejectReason (gtype, ServerGetRejectReasonVMCallback);
		}

		static void OverrideServerGetRejectReason (GLib.GType gtype, ServerGetRejectReasonNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ServerGetRejectReason = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr ServerGetRejectReasonNativeDelegate (IntPtr inst);

		static IntPtr ServerGetRejectReason_cb (IntPtr inst)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				string __result;
				__result = __obj.OnServerGetRejectReason ();
				return GLib.Marshaller.StringToPtrGStrdup(__result);
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideServerGetRejectReason")]
		protected virtual string OnServerGetRejectReason ()
		{
			return InternalServerGetRejectReason ();
		}

		private string InternalServerGetRejectReason ()
		{
			ServerGetRejectReasonNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ServerGetRejectReason;
			if (unmanaged == null) return null;

			IntPtr __result = unmanaged (this.Handle);
			return GLib.Marshaller.PtrToStringGFree(__result);
		}

		static ServerShutdownNativeDelegate ServerShutdown_cb_delegate;
		static ServerShutdownNativeDelegate ServerShutdownVMCallback {
			get {
				if (ServerShutdown_cb_delegate == null)
					ServerShutdown_cb_delegate = new ServerShutdownNativeDelegate (ServerShutdown_cb);
				return ServerShutdown_cb_delegate;
			}
		}

		static void OverrideServerShutdown (GLib.GType gtype)
		{
			OverrideServerShutdown (gtype, ServerShutdownVMCallback);
		}

		static void OverrideServerShutdown (GLib.GType gtype, ServerShutdownNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ServerShutdown = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void ServerShutdownNativeDelegate (IntPtr inst);

		static void ServerShutdown_cb (IntPtr inst)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				__obj.OnServerShutdown ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideServerShutdown")]
		protected virtual void OnServerShutdown ()
		{
			InternalServerShutdown ();
		}

		private void InternalServerShutdown ()
		{
			ServerShutdownNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ServerShutdown;
			if (unmanaged == null) return;

			unmanaged (this.Handle);
		}

		static ClientGetStateNativeDelegate ClientGetState_cb_delegate;
		static ClientGetStateNativeDelegate ClientGetStateVMCallback {
			get {
				if (ClientGetState_cb_delegate == null)
					ClientGetState_cb_delegate = new ClientGetStateNativeDelegate (ClientGetState_cb);
				return ClientGetState_cb_delegate;
			}
		}

		static void OverrideClientGetState (GLib.GType gtype)
		{
			OverrideClientGetState (gtype, ClientGetStateVMCallback);
		}

		static void OverrideClientGetState (GLib.GType gtype, ClientGetStateNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ClientGetState = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate int ClientGetStateNativeDelegate (IntPtr inst);

		static int ClientGetState_cb (IntPtr inst)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				GLib.DBusAuthMechanismState __result;
				__result = __obj.OnClientGetState ();
				return (int) __result;
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideClientGetState")]
		protected virtual GLib.DBusAuthMechanismState OnClientGetState ()
		{
			return InternalClientGetState ();
		}

		private GLib.DBusAuthMechanismState InternalClientGetState ()
		{
			ClientGetStateNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ClientGetState;
			if (unmanaged == null) return (GLib.DBusAuthMechanismState) 0;

			int __result = unmanaged (this.Handle);
			return (GLib.DBusAuthMechanismState) __result;
		}

		static ClientInitiateNativeDelegate ClientInitiate_cb_delegate;
		static ClientInitiateNativeDelegate ClientInitiateVMCallback {
			get {
				if (ClientInitiate_cb_delegate == null)
					ClientInitiate_cb_delegate = new ClientInitiateNativeDelegate (ClientInitiate_cb);
				return ClientInitiate_cb_delegate;
			}
		}

		static void OverrideClientInitiate (GLib.GType gtype)
		{
			OverrideClientInitiate (gtype, ClientInitiateVMCallback);
		}

		static void OverrideClientInitiate (GLib.GType gtype, ClientInitiateNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ClientInitiate = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr ClientInitiateNativeDelegate (IntPtr inst, out UIntPtr out_initial_response_len);

		static IntPtr ClientInitiate_cb (IntPtr inst, out UIntPtr out_initial_response_len)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				string __result;
				ulong myout_initial_response_len;
				__result = __obj.OnClientInitiate (out myout_initial_response_len);
				out_initial_response_len = new UIntPtr (myout_initial_response_len);
				return GLib.Marshaller.StringToPtrGStrdup(__result);
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideClientInitiate")]
		protected virtual string OnClientInitiate (out ulong out_initial_response_len)
		{
			return InternalClientInitiate (out out_initial_response_len);
		}

		private string InternalClientInitiate (out ulong out_initial_response_len)
		{
			ClientInitiateNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ClientInitiate;
			if (unmanaged == null) throw new InvalidOperationException ("No base method to invoke");

			UIntPtr native_out_initial_response_len;
			IntPtr __result = unmanaged (this.Handle, out native_out_initial_response_len);
			out_initial_response_len = (ulong) native_out_initial_response_len;
			return GLib.Marshaller.PtrToStringGFree(__result);
		}

		static ClientDataReceiveNativeDelegate ClientDataReceive_cb_delegate;
		static ClientDataReceiveNativeDelegate ClientDataReceiveVMCallback {
			get {
				if (ClientDataReceive_cb_delegate == null)
					ClientDataReceive_cb_delegate = new ClientDataReceiveNativeDelegate (ClientDataReceive_cb);
				return ClientDataReceive_cb_delegate;
			}
		}

		static void OverrideClientDataReceive (GLib.GType gtype)
		{
			OverrideClientDataReceive (gtype, ClientDataReceiveVMCallback);
		}

		static void OverrideClientDataReceive (GLib.GType gtype, ClientDataReceiveNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ClientDataReceive = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void ClientDataReceiveNativeDelegate (IntPtr inst, IntPtr data, UIntPtr data_len);

		static void ClientDataReceive_cb (IntPtr inst, IntPtr data, UIntPtr data_len)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				__obj.OnClientDataReceive (GLib.Marshaller.Utf8PtrToString (data));
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideClientDataReceive")]
		protected virtual void OnClientDataReceive (string data)
		{
			InternalClientDataReceive (data);
		}

		private void InternalClientDataReceive (string data)
		{
			ClientDataReceiveNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ClientDataReceive;
			if (unmanaged == null) return;

			IntPtr native_data = GLib.Marshaller.StringToPtrGStrdup (data);
			unmanaged (this.Handle, native_data, new UIntPtr ((ulong) System.Text.Encoding.UTF8.GetByteCount (data)));
			GLib.Marshaller.Free (native_data);
		}

		static ClientDataSendNativeDelegate ClientDataSend_cb_delegate;
		static ClientDataSendNativeDelegate ClientDataSendVMCallback {
			get {
				if (ClientDataSend_cb_delegate == null)
					ClientDataSend_cb_delegate = new ClientDataSendNativeDelegate (ClientDataSend_cb);
				return ClientDataSend_cb_delegate;
			}
		}

		static void OverrideClientDataSend (GLib.GType gtype)
		{
			OverrideClientDataSend (gtype, ClientDataSendVMCallback);
		}

		static void OverrideClientDataSend (GLib.GType gtype, ClientDataSendNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ClientDataSend = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate IntPtr ClientDataSendNativeDelegate (IntPtr inst, out UIntPtr out_data_len);

		static IntPtr ClientDataSend_cb (IntPtr inst, out UIntPtr out_data_len)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				string __result;
				ulong myout_data_len;
				__result = __obj.OnClientDataSend (out myout_data_len);
				out_data_len = new UIntPtr (myout_data_len);
				return GLib.Marshaller.StringToPtrGStrdup(__result);
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, true);
				// NOTREACHED: above call does not return.
				throw e;
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideClientDataSend")]
		protected virtual string OnClientDataSend (out ulong out_data_len)
		{
			return InternalClientDataSend (out out_data_len);
		}

		private string InternalClientDataSend (out ulong out_data_len)
		{
			ClientDataSendNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ClientDataSend;
			if (unmanaged == null) throw new InvalidOperationException ("No base method to invoke");

			UIntPtr native_out_data_len;
			IntPtr __result = unmanaged (this.Handle, out native_out_data_len);
			out_data_len = (ulong) native_out_data_len;
			return GLib.Marshaller.PtrToStringGFree(__result);
		}

		static ClientShutdownNativeDelegate ClientShutdown_cb_delegate;
		static ClientShutdownNativeDelegate ClientShutdownVMCallback {
			get {
				if (ClientShutdown_cb_delegate == null)
					ClientShutdown_cb_delegate = new ClientShutdownNativeDelegate (ClientShutdown_cb);
				return ClientShutdown_cb_delegate;
			}
		}

		static void OverrideClientShutdown (GLib.GType gtype)
		{
			OverrideClientShutdown (gtype, ClientShutdownVMCallback);
		}

		static void OverrideClientShutdown (GLib.GType gtype, ClientShutdownNativeDelegate callback)
		{
			GDBusAuthMechanismClass class_iface = GetClassStruct (gtype, false);
			class_iface.ClientShutdown = callback;
			OverrideClassStruct (gtype, class_iface);
		}

		[UnmanagedFunctionPointer (CallingConvention.Cdecl)]
		delegate void ClientShutdownNativeDelegate (IntPtr inst);

		static void ClientShutdown_cb (IntPtr inst)
		{
			try {
				DBusAuthMechanism __obj = GLib.Object.GetObject (inst, false) as DBusAuthMechanism;
				__obj.OnClientShutdown ();
			} catch (Exception e) {
				GLib.ExceptionManager.RaiseUnhandledException (e, false);
			}
		}

		[GLib.DefaultSignalHandler(Type=typeof(GLib.DBusAuthMechanism), ConnectionMethod="OverrideClientShutdown")]
		protected virtual void OnClientShutdown ()
		{
			InternalClientShutdown ();
		}

		private void InternalClientShutdown ()
		{
			ClientShutdownNativeDelegate unmanaged = GetClassStruct (this.LookupGType ().GetThresholdType (), true).ClientShutdown;
			if (unmanaged == null) return;

			unmanaged (this.Handle);
		}

		[StructLayout (LayoutKind.Sequential)]
		struct GDBusAuthMechanismClass {
			IntPtr GetPriority;
			IntPtr GetName;
			public IsSupportedNativeDelegate IsSupported;
			public EncodeDataNativeDelegate EncodeData;
			public DecodeDataNativeDelegate DecodeData;
			public ServerGetStateNativeDelegate ServerGetState;
			public ServerInitiateNativeDelegate ServerInitiate;
			public ServerDataReceiveNativeDelegate ServerDataReceive;
			public ServerDataSendNativeDelegate ServerDataSend;
			public ServerGetRejectReasonNativeDelegate ServerGetRejectReason;
			public ServerShutdownNativeDelegate ServerShutdown;
			public ClientGetStateNativeDelegate ClientGetState;
			public ClientInitiateNativeDelegate ClientInitiate;
			public ClientDataReceiveNativeDelegate ClientDataReceive;
			public ClientDataSendNativeDelegate ClientDataSend;
			public ClientShutdownNativeDelegate ClientShutdown;
		}

		static uint class_offset = ((GLib.GType) typeof (GLib.Object)).GetClassSize ();
		static Dictionary<GLib.GType, GDBusAuthMechanismClass> class_structs;

		static GDBusAuthMechanismClass GetClassStruct (GLib.GType gtype, bool use_cache)
		{
			if (class_structs == null)
				class_structs = new Dictionary<GLib.GType, GDBusAuthMechanismClass> ();

			if (use_cache && class_structs.ContainsKey (gtype))
				return class_structs [gtype];
			else {
				IntPtr class_ptr = new IntPtr (gtype.GetClassPtr ().ToInt64 () + class_offset);
				GDBusAuthMechanismClass class_struct = (GDBusAuthMechanismClass) Marshal.PtrToStructure (class_ptr, typeof (GDBusAuthMechanismClass));
				if (use_cache)
					class_structs.Add (gtype, class_struct);
				return class_struct;
			}
		}

		static void OverrideClassStruct (GLib.GType gtype, GDBusAuthMechanismClass class_struct)
		{
			IntPtr class_ptr = new IntPtr (gtype.GetClassPtr ().ToInt64 () + class_offset);
			Marshal.StructureToPtr (class_struct, class_ptr, false);
		}

#endregion
	}
}
