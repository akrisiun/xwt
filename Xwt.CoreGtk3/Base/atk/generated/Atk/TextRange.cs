// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Atk {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	[StructLayout(LayoutKind.Sequential)]
	public partial struct TextRange : IEquatable<TextRange> {

		public Atk.TextRectangle Bounds;
		public int StartOffset;
		public int EndOffset;
		public string Content;

		public static Atk.TextRange Zero = new Atk.TextRange ();

		public static Atk.TextRange New(IntPtr raw) {
			if (raw == IntPtr.Zero)
				return Atk.TextRange.Zero;
			return (Atk.TextRange) Marshal.PtrToStructure (raw, typeof (Atk.TextRange));
		}

		public bool Equals (TextRange other)
		{
			return true && Bounds.Equals (other.Bounds) && StartOffset.Equals (other.StartOffset) && EndOffset.Equals (other.EndOffset) && Content.Equals (other.Content);
		}

		public override bool Equals (object other)
		{
			return other is TextRange && Equals ((TextRange) other);
		}

		public override int GetHashCode ()
		{
			return this.GetType ().FullName.GetHashCode () ^ Bounds.GetHashCode () ^ StartOffset.GetHashCode () ^ EndOffset.GetHashCode () ^ Content.GetHashCode ();
		}

		private static GLib.GType GType {
			get { return GLib.GType.Pointer; }
		}
#endregion
	}
}
