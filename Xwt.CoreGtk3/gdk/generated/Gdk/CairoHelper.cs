// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace Gdk {

	using System;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class CairoHelper {

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdk_cairo_create(IntPtr window);

		public static Cairo.Context Create(Gdk.Window window) {
			IntPtr raw_ret = gdk_cairo_create(window == null ? IntPtr.Zero : window.Handle);
			Cairo.Context ret = new Cairo.Context (raw_ret, false);
			return ret;
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern bool gdk_cairo_get_clip_rectangle(IntPtr cr, IntPtr rect);

		public static bool GetClipRectangle(Cairo.Context cr, Gdk.Rectangle rect) {
			IntPtr native_rect = GLib.Marshaller.StructureToPtrAlloc (rect);
			bool raw_ret = gdk_cairo_get_clip_rectangle(cr == null ? IntPtr.Zero : cr.Handle, native_rect);
			bool ret = raw_ret;
			rect = (Gdk.Rectangle) Marshal.PtrToStructure (native_rect, typeof (Gdk.Rectangle));
			Marshal.FreeHGlobal (native_rect);
			return ret;
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gdk_cairo_rectangle(IntPtr cr, IntPtr rectangle);

		public static void Rectangle(Cairo.Context cr, Gdk.Rectangle rectangle) {
			IntPtr native_rectangle = GLib.Marshaller.StructureToPtrAlloc (rectangle);
			gdk_cairo_rectangle(cr == null ? IntPtr.Zero : cr.Handle, native_rectangle);
			rectangle = (Gdk.Rectangle) Marshal.PtrToStructure (native_rectangle, typeof (Gdk.Rectangle));
			Marshal.FreeHGlobal (native_rectangle);
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gdk_cairo_region(IntPtr cr, IntPtr region);

		public static void Region(Cairo.Context cr, Cairo.Region region) {
			gdk_cairo_region(cr == null ? IntPtr.Zero : cr.Handle, region == null ? IntPtr.Zero : region.Handle);
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr gdk_cairo_region_create_from_surface(IntPtr surface);

		public static Cairo.Region RegionCreateFromSurface(Cairo.Surface surface) {
			IntPtr raw_ret = gdk_cairo_region_create_from_surface(surface.Handle);
			Cairo.Region ret = new Cairo.Region(raw_ret);
			return ret;
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gdk_cairo_set_source_color(IntPtr cr, IntPtr color);

		public static void SetSourceColor(Cairo.Context cr, Gdk.Color color) {
			IntPtr native_color = GLib.Marshaller.StructureToPtrAlloc (color);
			gdk_cairo_set_source_color(cr == null ? IntPtr.Zero : cr.Handle, native_color);
			color = Gdk.Color.New (native_color);
			Marshal.FreeHGlobal (native_color);
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gdk_cairo_set_source_pixbuf(IntPtr cr, IntPtr pixbuf, double pixbuf_x, double pixbuf_y);

		public static void SetSourcePixbuf(Cairo.Context cr, Gdk.Pixbuf pixbuf, double pixbuf_x, double pixbuf_y) {
			gdk_cairo_set_source_pixbuf(cr == null ? IntPtr.Zero : cr.Handle, pixbuf == null ? IntPtr.Zero : pixbuf.Handle, pixbuf_x, pixbuf_y);
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gdk_cairo_set_source_rgba(IntPtr cr, IntPtr rgba);

		public static void SetSourceRgba(Cairo.Context cr, Gdk.RGBA rgba) {
			IntPtr native_rgba = GLib.Marshaller.StructureToPtrAlloc (rgba);
			gdk_cairo_set_source_rgba(cr == null ? IntPtr.Zero : cr.Handle, native_rgba);
			rgba = Gdk.RGBA.New (native_rgba);
			Marshal.FreeHGlobal (native_rgba);
		}

		[DllImport("libgdk-3-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void gdk_cairo_set_source_window(IntPtr cr, IntPtr window, double x, double y);

		public static void SetSourceWindow(Cairo.Context cr, Gdk.Window window, double x, double y) {
			gdk_cairo_set_source_window(cr == null ? IntPtr.Zero : cr.Handle, window == null ? IntPtr.Zero : window.Handle, x, y);
		}

#endregion
	}
}
