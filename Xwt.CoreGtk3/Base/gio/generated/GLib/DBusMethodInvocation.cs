// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.InteropServices;

#region Autogenerated code
	public partial class DBusMethodInvocation : GLib.Object {

		public DBusMethodInvocation (IntPtr raw) : base(raw) {}

		protected DBusMethodInvocation() : base(IntPtr.Zero)
		{
			CreateNativeObject (new string [0], new GLib.Value [0]);
		}

		[StructLayout (LayoutKind.Sequential)]
		struct GDBusMethodInvocationClass {
		}

		static uint class_offset = ((GLib.GType) typeof (GLib.Object)).GetClassSize ();
		static Dictionary<GLib.GType, GDBusMethodInvocationClass> class_structs;

		static GDBusMethodInvocationClass GetClassStruct (GLib.GType gtype, bool use_cache)
		{
			if (class_structs == null)
				class_structs = new Dictionary<GLib.GType, GDBusMethodInvocationClass> ();

			if (use_cache && class_structs.ContainsKey (gtype))
				return class_structs [gtype];
			else {
				IntPtr class_ptr = new IntPtr (gtype.GetClassPtr ().ToInt64 () + class_offset);
				GDBusMethodInvocationClass class_struct = (GDBusMethodInvocationClass) Marshal.PtrToStructure (class_ptr, typeof (GDBusMethodInvocationClass));
				if (use_cache)
					class_structs.Add (gtype, class_struct);
				return class_struct;
			}
		}

		static void OverrideClassStruct (GLib.GType gtype, GDBusMethodInvocationClass class_struct)
		{
			IntPtr class_ptr = new IntPtr (gtype.GetClassPtr ().ToInt64 () + class_offset);
			Marshal.StructureToPtr (class_struct, class_ptr, false);
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_connection(IntPtr raw);

		public GLib.DBusConnection Connection { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_connection(Handle);
				GLib.DBusConnection ret = GLib.Object.GetObject(raw_ret) as GLib.DBusConnection;
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_interface_name(IntPtr raw);

		public string InterfaceName { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_interface_name(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_message(IntPtr raw);

		public GLib.DBusMessage Message { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_message(Handle);
				GLib.DBusMessage ret = GLib.Object.GetObject(raw_ret) as GLib.DBusMessage;
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_method_info(IntPtr raw);

		public GLib.DBusMethodInfo MethodInfo { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_method_info(Handle);
				GLib.DBusMethodInfo ret = raw_ret == IntPtr.Zero ? null : (GLib.DBusMethodInfo) GLib.Opaque.GetOpaque (raw_ret, typeof (GLib.DBusMethodInfo), false);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_method_name(IntPtr raw);

		public string MethodName { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_method_name(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_object_path(IntPtr raw);

		public string ObjectPath { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_object_path(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_parameters(IntPtr raw);

		public GLib.Variant Parameters { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_parameters(Handle);
				GLib.Variant ret = new GLib.Variant(raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_sender(IntPtr raw);

		public string Sender { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_sender(Handle);
				string ret = GLib.Marshaller.Utf8PtrToString (raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_type();

		public static new GLib.GType GType { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_type();
				GLib.GType ret = new GLib.GType(raw_ret);
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern IntPtr g_dbus_method_invocation_get_user_data(IntPtr raw);

		public IntPtr UserData { 
			get {
				IntPtr raw_ret = g_dbus_method_invocation_get_user_data(Handle);
				IntPtr ret = raw_ret;
				return ret;
			}
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_dbus_method_invocation_return_dbus_error(IntPtr raw, IntPtr error_name, IntPtr error_message);

		public void ReturnDbusError(string error_name, string error_message) {
			IntPtr native_error_name = GLib.Marshaller.StringToPtrGStrdup (error_name);
			IntPtr native_error_message = GLib.Marshaller.StringToPtrGStrdup (error_message);
			g_dbus_method_invocation_return_dbus_error(Handle, native_error_name, native_error_message);
			GLib.Marshaller.Free (native_error_name);
			GLib.Marshaller.Free (native_error_message);
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_dbus_method_invocation_return_error_literal(IntPtr raw, int domain, int code, IntPtr message);

		public void ReturnErrorLiteral(int domain, int code, string message) {
			IntPtr native_message = GLib.Marshaller.StringToPtrGStrdup (message);
			g_dbus_method_invocation_return_error_literal(Handle, domain, code, native_message);
			GLib.Marshaller.Free (native_message);
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_dbus_method_invocation_return_error_valist(IntPtr raw, int domain, int code, IntPtr format, IntPtr var_args);

		public void ReturnErrorValist(int domain, int code, string format, IntPtr var_args) {
			IntPtr native_format = GLib.Marshaller.StringToPtrGStrdup (format);
			g_dbus_method_invocation_return_error_valist(Handle, domain, code, native_format, var_args);
			GLib.Marshaller.Free (native_format);
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_dbus_method_invocation_return_gerror(IntPtr raw, IntPtr error);

		public void ReturnGerror(IntPtr error) {
			g_dbus_method_invocation_return_gerror(Handle, error);
		}

		[DllImport("libgio-2.0-0.dll", CallingConvention = CallingConvention.Cdecl)]
		static extern void g_dbus_method_invocation_return_value(IntPtr raw, IntPtr parameters);

		public void ReturnValue(GLib.Variant parameters) {
			g_dbus_method_invocation_return_value(Handle, parameters == null ? IntPtr.Zero : parameters.Handle);
		}

#endregion
	}
}
